/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TableChooserView.java
 *
 * Created on 03 8, 12, 1:33:27 PM
 */

package rms.views.ordering;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import rms.models.BaseTableModel;
import rms.models.management.TableDBTable;
import supports.DataSupport;

/**
 *
 * @author squeekyclean
 */
public class TableChooserView extends javax.swing.JDialog {

    StringBuilder result;
    String existingTbls;
    /** Creates new form TableChooserView */
    public TableChooserView(java.awt.Frame parent, boolean modal, String existingTbls) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        result = new StringBuilder();
        this.existingTbls = existingTbls;
        loadTables();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnChoose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTables = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choose Tables");
        setAlwaysOnTop(true);
        setResizable(false);

        btnChoose.setText("Choose");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        tblTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTables);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnChoose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        // TODO add your handling code here:
        int rowIdxs[] = tblTables.getSelectedRows();
        if(rowIdxs.length > 0){
            BaseTableModel model = (BaseTableModel)tblTables.getModel();
            for(int row : rowIdxs){
                result.append(model.getValueAt(row, TableDBTable.TABLE_NUMBER) + ",");
            }
            result.deleteCharAt(result.length()-1);
        }
        else{
            result.append(" ");
        }

        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnChooseActionPerformed

    public String showDialog(){
        setVisible(true);
        return result.toString();
    }
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTables;
    // End of variables declaration//GEN-END:variables

    private void loadTables() {
        try {
            DataSupport dh = new DataSupport();
            TableDBTable db = TableDBTable.getInstance();
            String query = db.generateSelectAllWithDefaultAliasesSql();
            BaseTableModel temp = dh.executeQuery(query.substring(0, query.length()-1) + String.format(" WHERE %s (status = 'Active' AND table_status = 'Available');", (existingTbls !=null && !existingTbls.isEmpty() && !existingTbls.trim().isEmpty()) ?" table_number IN ("+ existingTbls+") || ": " "));
            BaseTableModel model = new BaseTableModel(temp.columnNames, temp.columnAliases, temp.columnClasses){

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }

            };
            model.rows = temp.rows;
            tblTables.setModel(model);
            tblTables.setRowSelectionAllowed(true);
            for(String invi: db.getInvisibleColumns()){
                tblTables.removeColumn(tblTables.getColumn(invi));
            }
        } catch (SQLException ex) {
            Logger.getLogger(TableChooserView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
